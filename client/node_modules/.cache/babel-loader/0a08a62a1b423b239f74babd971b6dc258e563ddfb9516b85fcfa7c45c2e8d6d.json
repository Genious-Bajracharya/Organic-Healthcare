{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\Desktop\\\\tries\\\\try11\\\\client\\\\src\\\\components\\\\dashboard.js\",\n  _s = $RefreshSig$();\n/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n// import jwt_decode from \"jwt-decode\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const [name, setName] = useState(\"\");\n  const [token, setToken] = useState(\"\");\n  const [expire, setExpire] = useState(\"\");\n  const [users, setUsers] = useState([]);\n  // const history = useHistory();\n  const navigate = useNavigate();\n\n  //   useEffect(() => {\n  //     refreshToken();\n  //     getUsers();\n  //   }, []);\n\n  //   const refreshToken = async () => {\n  //     try {\n  //       const response = await axios.get(\"http://localhost:5000/token\");\n  //       setToken(response.data.accessToken);\n  //       const decoded = jwt_decode(response.data.accessToken);\n  //       setName(decoded.name);\n  //       setExpire(decoded.exp);\n  //     } catch (error) {\n  //       if (error.response) {\n  //         // history.push(\"/\");\n  //         navigate(\"/\");\n  //       }\n  //     }\n  //   };\n\n  //   const axiosJWT = axios.create();\n\n  //   axiosJWT.interceptors.request.use(\n  //     async (config) => {\n  //       const currentDate = new Date();\n  //       if (expire * 1000 < currentDate.getTime()) {\n  //         const response = await axios.get(\"http://localhost:5000/token\");\n  //         config.headers.Authorization = `Bearer ${response.data.accessToken}`;\n  //         setToken(response.data.accessToken);\n  //         const decoded = jwt_decode(response.data.accessToken);\n  //         setName(decoded.name);\n  //         setExpire(decoded.exp);\n  //       }\n  //       return config;\n  //     },\n  //     (error) => {\n  //       return Promise.reject(error);\n  //     }\n  //   );\n\n  //   const getUsers = async () => {\n  //     const response = await axiosJWT.get(\"http://localhost:5000/users\", {\n  //       headers: {\n  //         Authorization: `Bearer ${token}`,\n  //       },\n  //     });\n  //     setUsers(response.data);\n  //   };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Welcome Back: \", name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: getUsers,\n      className: \"button is-info\",\n      children: \"Get Users\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table is-striped is-fullwidth\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"No\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: users.map((user, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: index + 1\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: user.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: user.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 15\n          }, this)]\n        }, user.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"EOoYd/zQZ7WWyis5LZIEjntIOGA=\", false, function () {\n  return [useNavigate];\n});\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","axios","useNavigate","Dashboard","name","setName","token","setToken","expire","setExpire","users","setUsers","navigate","getUsers","map","user","index","email","id"],"sources":["C:/Users/hp/Desktop/tries/try11/client/src/components/dashboard.js"],"sourcesContent":["/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n// import jwt_decode from \"jwt-decode\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst Dashboard = () => {\r\n  const [name, setName] = useState(\"\");\r\n  const [token, setToken] = useState(\"\");\r\n  const [expire, setExpire] = useState(\"\");\r\n  const [users, setUsers] = useState([]);\r\n  // const history = useHistory();\r\n  const navigate = useNavigate();\r\n\r\n  //   useEffect(() => {\r\n  //     refreshToken();\r\n  //     getUsers();\r\n  //   }, []);\r\n\r\n  //   const refreshToken = async () => {\r\n  //     try {\r\n  //       const response = await axios.get(\"http://localhost:5000/token\");\r\n  //       setToken(response.data.accessToken);\r\n  //       const decoded = jwt_decode(response.data.accessToken);\r\n  //       setName(decoded.name);\r\n  //       setExpire(decoded.exp);\r\n  //     } catch (error) {\r\n  //       if (error.response) {\r\n  //         // history.push(\"/\");\r\n  //         navigate(\"/\");\r\n  //       }\r\n  //     }\r\n  //   };\r\n\r\n  //   const axiosJWT = axios.create();\r\n\r\n  //   axiosJWT.interceptors.request.use(\r\n  //     async (config) => {\r\n  //       const currentDate = new Date();\r\n  //       if (expire * 1000 < currentDate.getTime()) {\r\n  //         const response = await axios.get(\"http://localhost:5000/token\");\r\n  //         config.headers.Authorization = `Bearer ${response.data.accessToken}`;\r\n  //         setToken(response.data.accessToken);\r\n  //         const decoded = jwt_decode(response.data.accessToken);\r\n  //         setName(decoded.name);\r\n  //         setExpire(decoded.exp);\r\n  //       }\r\n  //       return config;\r\n  //     },\r\n  //     (error) => {\r\n  //       return Promise.reject(error);\r\n  //     }\r\n  //   );\r\n\r\n  //   const getUsers = async () => {\r\n  //     const response = await axiosJWT.get(\"http://localhost:5000/users\", {\r\n  //       headers: {\r\n  //         Authorization: `Bearer ${token}`,\r\n  //       },\r\n  //     });\r\n  //     setUsers(response.data);\r\n  //   };\r\n\r\n  return (\r\n    <div className=\"container mt-5\">\r\n      <h1>Welcome Back: {name}</h1>\r\n      <button onClick={getUsers} className=\"button is-info\">\r\n        Get Users\r\n      </button>\r\n      <table className=\"table is-striped is-fullwidth\">\r\n        <thead>\r\n          <tr>\r\n            <th>No</th>\r\n            <th>Name</th>\r\n            <th>Email</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {users.map((user, index) => (\r\n            <tr key={user.id}>\r\n              <td>{index + 1}</td>\r\n              <td>{user.name}</td>\r\n              <td>{user.email}</td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB;AACA,SAASC,WAAW,QAAQ,kBAAkB;AAAC;AAE/C,MAAMC,SAAS,GAAG,MAAM;EAAA;EACtB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACO,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACS,MAAM,EAAEC,SAAS,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACW,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EACtC;EACA,MAAMa,QAAQ,GAAGV,WAAW,EAAE;;EAE9B;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,oBACE;IAAK,SAAS,EAAC,gBAAgB;IAAA,wBAC7B;MAAA,WAAI,gBAAc,EAACE,IAAI;IAAA;MAAA;MAAA;MAAA;IAAA,QAAM,eAC7B;MAAQ,OAAO,EAAES,QAAS;MAAC,SAAS,EAAC,gBAAgB;MAAA,UAAC;IAEtD;MAAA;MAAA;MAAA;IAAA,QAAS,eACT;MAAO,SAAS,EAAC,+BAA+B;MAAA,wBAC9C;QAAA,uBACE;UAAA,wBACE;YAAA,UAAI;UAAE;YAAA;YAAA;YAAA;UAAA,QAAK,eACX;YAAA,UAAI;UAAI;YAAA;YAAA;YAAA;UAAA,QAAK,eACb;YAAA,UAAI;UAAK;YAAA;YAAA;YAAA;UAAA,QAAK;QAAA;UAAA;UAAA;UAAA;QAAA;MACX;QAAA;QAAA;QAAA;MAAA,QACC,eACR;QAAA,UACGH,KAAK,CAACI,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBACrB;UAAA,wBACE;YAAA,UAAKA,KAAK,GAAG;UAAC;YAAA;YAAA;YAAA;UAAA,QAAM,eACpB;YAAA,UAAKD,IAAI,CAACX;UAAI;YAAA;YAAA;YAAA;UAAA,QAAM,eACpB;YAAA,UAAKW,IAAI,CAACE;UAAK;YAAA;YAAA;YAAA;UAAA,QAAM;QAAA,GAHdF,IAAI,CAACG,EAAE;UAAA;UAAA;UAAA;QAAA,QAKjB;MAAC;QAAA;QAAA;QAAA;MAAA,QACI;IAAA;MAAA;MAAA;MAAA;IAAA,QACF;EAAA;IAAA;IAAA;IAAA;EAAA,QACJ;AAEV,CAAC;AAAC,GAnFIf,SAAS;EAAA,QAMID,WAAW;AAAA;AAAA,KANxBC,SAAS;AAqFf,eAAeA,SAAS;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}